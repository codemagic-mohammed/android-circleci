# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Clean assembleRelease"
  lane :clean do
    gradle(task: "clean assembleRelease")
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end


  desc "Build, increment the build number and publish to the Play store"
  lane :release do
    gradle(task: "clean assembleRelease")
    g_key = ENV["GCLOUD_SERVICE_ACCOUNT_CREDENTIALS"].strip

    gradle(
      # task: 'assemble', #only apk
      task: 'bundle', #apk & aab
      build_type: 'Release',
      print_command: true,
      properties: { 
        "android.injected.version.code" => google_play_track_version_codes( 
          json_key_data: "#{g_key}",
          track: "internal"
          ) [0] + 1,
      }
    )
    # read more about the upload_to_play_store method here: https://docs.fastlane.tools/actions/upload_to_play_store/
    upload_to_play_store(
      track: 'internal',
      release_status: 'draft',
      skip_upload_apk: true,
      json_key_data: "#{g_key}"
    )  
  end

#   desc "Publish to the AppGallery store"
#   lane :huawei do
#     gradle(
#       # task: 'assemble', #only apk
#       task: 'bundle', #apk & aab
#       build_type: 'Release',
#       print_command: true,
#     )

#     huawei_appgallery_connect(
#     client_id: "#{ENV["CLIENT_ID"]}",
#     client_secret: "#{ENV["CLIENT_SECRET"]}",
#     app_id: "#{ENV["APP_ID"]}",
#     apk_path: "./app/build/outputs/bundle/release/app-release.aab",
    
#     # Optional, Parameter beyond this are optional
    
#     # If you are facing errors when submitting for review, increase the delay time before submitting the app for review using this option:
#     delay_before_submit_for_review: 20,

#     # if you're uploading aab instead of apk, specify is_aab to true and specify path to aab file on apk_path
#     is_aab: true, 
  
#     submit_for_review: true,
# )
#   end

  desc "Publish to the Amazon appstore"
  lane :amazon do
    gradle(
      task: 'assemble', #only apk
      # task: 'bundle', #apk & aab
      build_type: 'Release',
      print_command: true,
    )

    amazon_app_submission(
    client_id: "amzn1.application-oa2-client.e66ce1cd2d094006804fbd1a7d7c68d6",
    client_secret: "365b6b5d494531e59255e641fa06ec0a4a50cfc45d50a386dde7185ee5ebf31b",
    app_id: "amzn1.devportal.mobileapp.72cb1357f8334c65ab01b5470829707e",
    # Optional
    apk_path: "./app/build/outputs/apk/release/app-release.apk",
    upload_apk: true,
    submit_for_review: false
  )
  #   amazon_app_submission(
  #   client_id: "#{ENV["CLIENT_ID"]}",
  #   client_secret: "#{ENV["CLIENT_SECRET"]}",
  #   app_id: "#{ENV["APP_ID"]}",
  #   # Optional
  #   apk_path: "./app/build/outputs/apk/release/app-release.apk",
  #   upload_apk: true,
  #   submit_for_review: true
  # )
  end
end
